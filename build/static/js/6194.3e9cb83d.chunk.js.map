{"version":3,"file":"static/js/6194.3e9cb83d.chunk.js","mappings":"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","sources":["share_components/CreatePassword.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  BsEye,\r\n  BsEyeSlash,\r\n  BsFillEyeFill,\r\n  BsFillEyeSlashFill,\r\n} from \"react-icons/bs\";\r\nimport { notify, save } from \"../api_services/SharedServices\";\r\nimport { UseFormValidations } from \"../validations/UseFormValidation\";\r\nimport { urls } from \"../api_services/url\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { SiAdobecreativecloud } from \"react-icons/si\";\r\n\r\nconst CreatePassword = () => {\r\n  const { userId ,key} = useParams();\r\n  const navigate = useNavigate();\r\n  // const [show, setShow] = useState(false)\r\n  const [show, setShow] = useState({ new: true, conform: true })\r\n  \r\n\r\n  const submit = async () => {\r\n    if (data?.password && data?.password == data?.ConfirmPassword) {\r\n      let jsonObjects={\r\n        password:data?.password,\r\n        guid:key\r\n      }\r\n      let res = await save(urls?.logins.changePassword, {jsonObjects});\r\n      if (res?.data?.status == true) {\r\n        navigate(\"/\");\r\n      }\r\n    } else {\r\n      notify(false, \"Password and Confirm Password should be same!!\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    sessionStorage?.clear();\r\n  }, []);\r\n  const {\r\n    data,\r\n    errors,\r\n    setValues,\r\n    handleChange,\r\n    handleSubmit,\r\n    handleEmailChange,\r\n  } = UseFormValidations({\r\n    initialValues: {\r\n      password: \"\",\r\n      ConfirmPassword: \"\",\r\n      notShowMsg: true,\r\n    },\r\n    validationSchema: {\r\n      ConfirmPassword: {\r\n        required: {\r\n          value: true,\r\n          message: \"Please enter confirm password\",\r\n        },\r\n      },\r\n      password: {\r\n        required: {\r\n          value: true,\r\n          message: \"Please enter new password\",\r\n        },\r\n        minlength: {\r\n          value: 8,\r\n          message:\r\n            \"Password should contain one uppercase,one lowercase, one special character, one number and should be greater than 8 characters\",\r\n        },\r\n        pattern: {\r\n          value:\r\n            /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/,\r\n          message:\r\n            \"Password should contain one uppercase,one lowercase, one special character, one number and should be greater than 8 characters\",\r\n        },\r\n      },\r\n    },\r\n    submit: submit,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Container fluid className=\"body_bg \" style={{ height: \"100vh\" }}>\r\n        <Row lg={12} className=\"bgheader d-flex justify-content-center p-2 \">\r\n          <Col lg={12} className=\" d-flex justify-content-center \">\r\n            <SiAdobecreativecloud size={34} color=\"white\" className=\"py-1\" />\r\n            <span className=\"text-white px-2 headerfont\">OutPatientPro</span>\r\n          </Col>\r\n        </Row>\r\n        <div\r\n          className=\"row d-flex justify-content-center px-4 \"\r\n          style={{ marginTop: \"14vh\" }}\r\n        >\r\n          <div className=\"col-lg-4 bg-white  rounded px-4\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"headerfont1 text-center p-4\">Create Password</div>\r\n              <div class=\"mb-3\">\r\n                <label className=\"signin\" for=\"exampleInputPassword1\">\r\n                  Password\r\n                </label>\r\n\r\n                <div className=\"password-container\">\r\n                  <input\r\n                  type={show?.new == true ? \"password\" : \"text\"}\r\n                    className=\"form-control bg-white\"\r\n                    placeholder=\"Enter New Password\"\r\n                    id=\"email\"\r\n                    autoComplete=\"off\"\r\n                    name=\"password\"\r\n                    onChange={handleChange(\"password\")}\r\n                  />\r\n                  <span className=\"eye-icon\"  onClick={() => setShow({ ...show, new: !show.new })}>\r\n                    {show?.new == true ?<BsEyeSlash /> : <BsEye />}\r\n                  </span>\r\n                </div>\r\n                {errors && errors.password && (\r\n                  <p className=\"text text-danger\">{errors.password}</p>\r\n                )}\r\n              </div>\r\n\r\n              <div class=\"mb-3\">\r\n                <label className=\"signin\" for=\"exampleInputPassword1\">\r\n                Confirm  Password\r\n                </label>\r\n\r\n                <div className=\"password-container\">\r\n                <input\r\n                 type={show?.conform == true ? \"password\" : \"text\"}\r\n\r\n                 \r\n                  className=\"form-control bg-white\"\r\n                  autoComplete=\"off\"\r\n                  name=\"ConfirmPassword\"\r\n                  onChange={handleChange(\"ConfirmPassword\")}\r\n                  placeholder=\"Enter Confirm Password\"\r\n                  id=\"pwd\"\r\n                />\r\n                  <span className=\"eye-icon\" onClick={() => setShow({ ...show, conform: !show.conform })}>{show.conform == true ? <BsEyeSlash /> : <BsEye />}</span>\r\n\r\n                </div>\r\n                {errors && errors.ConfirmPassword && (\r\n                  <p className=\"text text-danger\">{errors.ConfirmPassword}</p>\r\n                )}\r\n              </div>\r\n              <label className=\"fornt-weight-bold\">Note</label>\r\n              <p className=\"text-danger bg-white p-1\">\r\n                Password should contain one uppercase,one lowercase, one special\r\n                character, one number and should be greater than 8 characters\r\n              </p>\r\n              <div align=\"center \" className=\"mb-4\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"text-white signin col-12 p-2 border rounded\"\r\n                  style={{ background: \" #0073EE 0% 0% no-repeat padding-box\" }}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePassword;\r\n"],"names":["CreatePassword","userId","key","useParams","navigate","useNavigate","show","setShow","useState","new","conform","useEffect","_sessionStorage","sessionStorage","clear","data","errors","setValues","handleChange","handleSubmit","handleEmailChange","UseFormValidations","initialValues","password","ConfirmPassword","notShowMsg","validationSchema","required","value","message","minlength","pattern","submit","async","_res$data","jsonObjects","guid","res","save","urls","logins","changePassword","status","notify","_jsx","_Fragment","children","_jsxs","Container","fluid","className","style","height","Row","lg","Col","SiAdobecreativecloud","size","color","marginTop","onSubmit","class","for","type","placeholder","id","autoComplete","name","onChange","onClick","BsEyeSlash","BsEye","align","background"],"sourceRoot":""}