{"version":3,"file":"static/js/185.162d3d60.chunk.js","mappings":"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","sources":["modules/facility_admin/account/Account.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { SharedServices, save } from \"../../../api_services/SharedServices\";\r\nimport { UseFormValidations } from \"../../../validations/UseFormValidation\";\r\nimport { BsEye, BsEyeSlash } from \"react-icons/bs\";\r\nimport { urls } from \"../../../api_services/url\";\r\n\r\nconst Account = () => {\r\n  const { state } = SharedServices({});\r\n  const navigate = useNavigate();\r\n  const [isDelegateOpen, setIsDelegateOpen] = useState(false);\r\n  const [show, setShow] = useState(false)\r\n  const submit = async () => {\r\n    let jsonObjects={email:sessionStorage?.getItem(\"email\"),password:data?.password}\r\n         await save(urls?.account?.changePassword,{jsonObjects})\r\n  }\r\n\r\n  const { data, errors, handleChange, headerlink, handleEmailChange, handleSubmit } = UseFormValidations({\r\n    initialValues: {\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    validationSchema: {\r\n      confirmPassword: {\r\n        required: {\r\n          value: true,\r\n          message: \"Please enter confirm password\",\r\n        },\r\n      },\r\n      password: {\r\n        required: {\r\n          value: true,\r\n          message: \"Please enter new password\",\r\n        },\r\n        minlength: {\r\n          value: 8,\r\n          message: \"Password should contain one uppercase,one lowercase, one special character, one number and should be greater than 8 characters\",\r\n        },\r\n        pattern: {\r\n          value:\r\n            /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/,\r\n          message: \"Password should contain one uppercase,one lowercase, one special character, one number and should be greater than 8 characters\",\r\n        },\r\n      },\r\n    },\r\n    submit: submit,\r\n  });\r\n  const handleDelegateClick = () => {\r\n    setIsDelegateOpen(!isDelegateOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    headerlink([{ name: \"My Account\", link: \"/outpatientpro/facility/account/details\", active: true }])\r\n  }, []);\r\n\r\n  const emailErrorColor = (key) => {\r\n    return errors && errors?.[key]\r\n      ? \"form-control p-3 password-input border-danger\"\r\n      : \"form-control p-3 password-input \";\r\n  };\r\n  const emailErrorColor1 = (key) => {\r\n    return errors && errors?.[key]\r\n      ? \"form-control p-3 mt-2 border-danger\"\r\n      : \"form-control p-3  mt-2\";\r\n  };\r\n\r\n  return (\r\n    < >\r\n      <div className=\" \">\r\n        <form onSubmit={handleSubmit}>\r\n         <div className=\" bg-white \"> \r\n         <div className=\"ms-1 p-3 f30 medium mb-2 f20mobile\">My Account</div></div>\r\n\r\n          {/* <div className=\"full-width-line\"></div> */}\r\n\r\n          <div className=\"mt-2 bg-white px-3\">\r\n            <div className=\"col-xl-8 col-lg-8 col-md-12 p-3\">\r\n            <div className=\"row\">\r\n\r\n             <div className=\"col-xl-2 col-lg-2  col-md-2 col-sm-2 \"> \r\n             <label >Name</label>\r\n             </div>\r\n              <div className=\"col-xl-10 col-lg-10 col-md-10 col-sm-10 label \"> \r\n               {sessionStorage.getItem(\"firstName\")}{\" \"}\r\n                {sessionStorage.getItem(\"lastName\")}\r\n                </div>\r\n             \r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"px-3 row\">\r\n            <div className=\"col-xl-4 col-lg-5 col-md-8\">\r\n              <label className=\"\">Email</label>\r\n              <input className=\"form-control \"disabled placeholder=\"Email*\" value={sessionStorage?.getItem(\"email\")} name=\"email\" type=\"text\" />\r\n            </div>\r\n\r\n\r\n          </div>\r\n          <div className=\"p-3 row\">\r\n            <div className=\"col-xl-4 col-lg-5 col-md-8\">\r\n              <label className=\"\" for=\"exampleInputPassword1\" >\r\n                Password <span className=\"text-danger\">{\" \"}*</span>\r\n              </label>\r\n\r\n              <div className=\"password-container\">\r\n                <input\r\n                  type={show ? 'text' : 'password'}\r\n                  className={emailErrorColor(\"password\")}\r\n                  name=\"password\"\r\n                  value={data?.password}\r\n                  placeholder=\"Password *\"\r\n                  onChange={handleChange(\"password\")}\r\n                />\r\n                <span onClick={() => setShow(!show)} className=\"eye-icon\">\r\n                  {!show ? <BsEyeSlash /> : <BsEye />}\r\n                </span>\r\n              </div>\r\n              {errors && errors.password && (\r\n                <p className=\"text text-danger\">{errors.password}</p>\r\n              )}\r\n\r\n              <input className={emailErrorColor1(\"confirmPassword\")}\r\n                value={data?.confirmPassword}\r\n\r\n                onChange={handleChange(\"confirmPassword\")}\r\n                placeholder=\"Confirm Password *\" name=\"confirmPassword\" type=\"password\" />\r\n              {errors && errors.confirmPassword && (\r\n                <p className=\"text text-danger\">{errors.confirmPassword}</p>\r\n              )}\r\n            </div>\r\n            <div className=\"row mt-4\">\r\n              <label className=\"\">Note</label>\r\n              <p className=\"text-danger bg-white p-1 px-3\">\r\n                Password should contain one uppercase,one lowercase, one special\r\n                character, one number and should be greater than 8 characters\r\n              </p>\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n\r\n\r\n\r\n          <hr />\r\n\r\n          <div className=\"p-3\">\r\n\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"border pointer rounded  api-connections  d-flex align-items-center justify-content-center text-center\"\r\n\r\n            >\r\n              Update Profile\r\n            </button>\r\n\r\n          </div></div>\r\n        </form>\r\n      </div>\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n"],"names":["Account","_sessionStorage2","state","SharedServices","isDelegateOpen","setIsDelegateOpen","useNavigate","useState","show","setShow","data","errors","handleChange","headerlink","handleEmailChange","handleSubmit","UseFormValidations","initialValues","password","confirmPassword","validationSchema","required","value","message","minlength","pattern","submit","async","_sessionStorage","_urls$account","jsonObjects","email","sessionStorage","getItem","save","urls","account","changePassword","useEffect","name","link","active","_jsx","_Fragment","children","className","_jsxs","onSubmit","disabled","placeholder","type","for","key","onChange","onClick","BsEye","BsEyeSlash","emailErrorColor1"],"sourceRoot":""}