{"version":3,"file":"static/js/3572.3e31ad25.chunk.js","mappings":"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","sources":["../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/Modal.js"],"sourcesContent":["import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","/* eslint-disable import/prefer-default-export */\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  onEnter,\n  ...rest\n}, ref) => {\n  const props = {\n    in: false,\n    timeout: 300,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    ...rest\n  };\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  }, [onEnter]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.displayName = 'Fade';\nexport default Fade;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\nexport default ModalBody;","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\nexport default ModalFooter;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nconst ModalTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\nexport default ModalTitle;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","\"use client\";\n\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'data-bs-theme': dataBsTheme,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"data-bs-theme\": dataBsTheme,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"],"names":["size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","activeElement","doc","ownerDocument","active","nodeName","e","OPEN_DATA_ATTRIBUTE","dataAttr","constructor","handleContainerOverflow","isRTL","arguments","length","undefined","this","modals","getScrollbarWidth","window","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","paddingProp","container","scrollBarWidth","concat","parseInt","css","setAttribute","reset","forEach","m","remove","removeContainerStyle","removeAttribute","Object","assign","add","modal","modalIdx","indexOf","push","state","splice","isTopModal","resolveContainerRef","ref","getBoundingClientRect","_ref","children","in","inProp","onExited","mountOnEnter","unmountOnExit","hasEnteredRef","handleExited","useEventCallback","combinedRef","useMergedRefs","child","cloneElement","ImperativeTransition","_ref2","onEntered","transition","exited","setExited","useState","onTransition","isInitialRef","handleTransition","useIsomorphicEffect","stale","element","initial","isStale","useTransition","options","Promise","resolve","then","onFinish","error","renderTransition","Component","runTransition","props","_jsx","NoopTransition","_excluded","manager","useModalManager","provided","useWindow","modalManager","ModalManager","getManager","dialog","backdrop","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","show","role","className","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onExit","onExiting","onEnter","onEntering","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","ownerWindow","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","code","keyCode","isEscKey","defaultPrevented","dialogProps","tabIndex","React","appear","backdropElement","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","replaceClassName","origClass","classToRemove","replace","RegExp","Selector","BootstrapModalManager","adjustAndStore","prop","adjust","actual","dataset","parseFloat","restore","super","classList","baseVal","hasClass","marginProp","qsa","el","sharedManager","fadeStyles","ENTERING","ENTERED","Fade","transitionClasses","timeout","handleEnter","node","isAppearing","triggerBrowserReflow","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","classNames","ModalBody","bsPrefix","as","useBootstrapPrefix","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","ModalFooter","propTypes","PropTypes","variant","CloseButton","ariaLabel","type","closeLabel","closeVariant","closeButton","context","useContext","ModalContext","handleClick","ModalHeader","AbstractModalHeader","DivStyledAsH4","p","ModalTitle","DialogTransition","BackdropTransition","dialogClassName","dialogAs","Dialog","dataBsTheme","ariaLabelledby","ariaDescribedby","animation","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","useCallbackRef","mergedRef","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","Provider","BaseModal","preventDefault","handleEntering","addEventListener","onMouseUp","onMouseDown","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}