{"version":3,"file":"static/js/1993.e77240ce.chunk.js","mappings":"yOAUA,MA6bA,EA7b0BA,KAAO,IAADC,EAE9B,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,KAC1CC,EAAIC,IAAQF,EAAAA,EAAAA,UAAS,CAAC,IACvBG,EAAQC,IAAYJ,EAAAA,EAAAA,UAAS,KAC7BK,EAAWC,IAAeN,EAAAA,EAAAA,UAAS,KAClCO,EAAgBC,IAAqBR,EAAAA,EAAAA,WAAS,IAC9CS,EAAMC,IAAWV,EAAAA,EAAAA,WAAS,IAC1BW,EAAOC,IAAWZ,EAAAA,EAAAA,aA0EnB,KAAEa,EAAI,OAAEC,EAAM,aAAEC,EAAY,WAAEC,EAAU,kBAAEC,EAAiB,aAAEC,EAAY,UAAEC,EAAS,UAACC,EAAS,kBAACC,EAAiB,iBAACC,IAAoBC,EAAAA,EAAAA,GAAmB,CAC5JC,cAAe,CACbC,SAAU,GACVC,gBAAiB,IAEnBC,iBAAkB,CAChBD,gBAAiB,CACfE,SAAU,CACRC,OAAO,EACPC,QAAS,kCAGbL,SAAU,CACRG,SAAU,CACRC,OAAO,EACPC,QAAS,6BAEXC,UAAW,CACTF,MAAO,EACPC,QAAS,kIAEXE,QAAS,CACPH,MACE,oEACFC,QAAS,sIASXG,EAAaJ,GACVA,GAAkB,IAATA,EAAcA,EAAQ,IAGxCK,EAAAA,EAAAA,YAAU,KACRlB,EAAW,CACX,CAACmB,KAAK,aAAaC,KAAK,4CAA4CC,QAAO,KAhFrDC,WAAa,IAADC,EAClC,IAGIC,QAAYC,EAAAA,EAAAA,IAAY,OAAJC,EAAAA,SAAI,IAAJA,EAAAA,IAAc,QAAVH,EAAJG,EAAAA,GAAMC,gBAAQ,IAAAJ,OAAV,EAAJA,EAAgBK,YAAa,CACnDC,YAJgB,CAChBC,KAAM,cAKR/C,EAAgByC,EAAI,EA2EtBO,GAxEiBT,WAAU,IAADU,EACxB,IAGIR,QAAYC,EAAAA,EAAAA,IAAY,OAAJC,EAAAA,SAAI,IAAJA,EAAAA,IAAc,QAAVM,EAAJN,EAAAA,GAAMC,gBAAQ,IAAAK,OAAV,EAAJA,EAAgBJ,YAAa,CAAEC,YAHrC,CAChBC,KAAM,kBAGR1C,EAAWoC,EAAI,EAoEjBS,GArDkBX,WAChB,IAAIO,EAAY,CAACK,OAAOC,eAAeC,QAAQ,WAE3CnD,EAAI,OADMoD,EAAAA,EAAAA,IAAQX,EAAAA,GAAKC,SAASW,YAAY,CAACT,iBAE9C,OAAH5C,QAAG,IAAHA,GAAAA,EAAKsD,KAAKC,IACRA,EAAU,OAAG,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGC,UAAU,IAE3BvD,EAAOD,EAAI,GAAG,EA+ChByD,GAlEoBpB,WAAU,IAADqB,EAC3B,IAGInB,QAAYC,EAAAA,EAAAA,IAAY,OAAJC,EAAAA,SAAI,IAAJA,EAAAA,IAAc,QAAViB,EAAJjB,EAAAA,GAAMC,gBAAQ,IAAAgB,OAAV,EAAJA,EAAgBf,YAAa,CAACC,YAHpC,CAChBC,KAAM,gBAIRxC,EAAckC,EAAI,EA6DpBoB,GA5F2BtB,WACzB,IAAIO,EAAY,CACdK,OAAOC,eAAeC,QAAQ,WAE5BZ,QAAUa,EAAAA,EAAAA,IAAQX,EAAAA,GAAKC,SAASW,YAAY,CAACT,gBACjD1B,EAAUqB,EAAI,EAwFhBqB,EAAoB,GAClB,CAAClD,KAELuB,EAAAA,EAAAA,YAAU,KAAKd,EAAUnB,EAAI,GAAE,CAACA,IAC9B,MAAM6D,EAAmBC,GAChBjD,GAAgB,OAANA,QAAM,IAANA,GAAAA,EAASiD,GACtB,gDACA,mCAmBN,OAPA7B,EAAAA,EAAAA,YAAU,KAEW,IAAD8B,GAAX,OAAJnD,QAAI,IAAJA,OAAI,EAAJA,EAAMqC,QAAO,GACf9B,EAAsB,OAAZtB,QAAY,IAAZA,GAAkD,QAAtCkE,EAAZlE,EAAcmE,QAAQT,IAAK,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGN,UAAY,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAMqC,iBAAO,IAAAc,OAAtC,EAAZA,EAAqD,GAChE,GAEC,CAAK,OAAJnD,QAAI,IAAJA,OAAI,EAAJA,EAAMqC,OAAOvC,KAEfuD,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeF,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,MAAIG,UAAU,0BAAyBF,SAAC,gBAExCD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,qBAGfH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMF,UACnBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBF,SAAA,CAAC,kBACjBD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcF,SAAC,YAG/CC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EACpBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,eACMD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,cAAaF,SAAC,UAE3CD,EAAAA,EAAAA,KAAA,SACEG,UAAU,gBACVC,YAAY,gBACZxB,KAAK,OACLjB,MAAOI,EAAUpB,EAAK0D,WACtBC,SAAUzD,EAAa,aACvBoB,KAAK,kBAGTiC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,kBACPD,EAAAA,EAAAA,KAAA,SACEG,UAAU,gBACVC,YAAY,iBACZxB,KAAK,OACLjB,MAAOI,EAAUpB,EAAK4D,YACtBD,SAAUzD,EAAa,cACvBoB,KAAK,mBAGTiC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CACG,IAAI,aACID,EAAAA,EAAAA,KAAA,QAAMG,UAAU,cAAaF,SAAC,MAAS,QAElDD,EAAAA,EAAAA,KAAA,SACEG,UAAU,gBACVC,YAAY,eACZxB,KAAK,OACLjB,MAAOI,EAAUpB,EAAK6D,UACtBF,SAAUzD,EAAa,YACvBoB,KAAK,oBAKTiC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWF,SAAA,EACxBC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,QACDD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,cAAaF,SAAC,UAEpCD,EAAAA,EAAAA,KAACS,IAAU,CACPN,UAAU,oBACVO,UAAc,OAAJ/D,QAAI,IAAJA,OAAI,EAAJA,EAAMgE,MAAO,IAAIC,KAAS,OAAJjE,QAAI,IAAJA,OAAI,EAAJA,EAAMgE,KACtCE,QAAS,IAAID,KAAK,KAAM,EAAG,GAC3BE,QAAS,IAAIF,KACbN,SAAWS,IAAO3D,EAAiB2D,EAAG,MAAM,EAC5CC,aAAa,MACb/C,KAAK,YACLgD,WAAW,aACXC,gBAAgB,MAChBC,gBAAgB,0BAChBC,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,eAGnBpB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWF,SAAA,EACxBC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,UACCD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,cAAaF,SAAC,UAEtCD,EAAAA,EAAAA,KAAA,SAAOG,UAAU,gBACjBoB,UAAQ,EAACnB,YAAY,SACrBzC,MAAqB,QAAhBhC,EAAEsD,sBAAc,IAAAtD,OAAA,EAAdA,EAAgBuD,QAAQ,SAC/BjB,KAAK,QAAQW,KAAK,gBAItBsB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACnBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,CAAC,wBACVD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,cAAaF,SAAC,UAGpDC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACnBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,kBACSD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,cAAaF,SAAC,UAE9CC,EAAAA,EAAAA,MAAA,UAAQC,UAAU,cAChBxC,MAAOI,EAAUpB,EAAK6E,cAEtBD,UAAQ,EACRtD,KAAK,eAAcgC,SAAA,EAEnBD,EAAAA,EAAAA,KAAA,UAAQrC,MAAM,GAAEsC,SAAC,kBAChBhE,IAAgB,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAASoD,KAAKC,IAAIU,EAAAA,EAAAA,KAAA,UAAQrC,MAAQ,OAAD2B,QAAC,IAADA,OAAC,EAADA,EAAGmC,SAASxB,SAAG,OAADX,QAAC,IAADA,OAAC,EAADA,EAAGrB,WAC7D+B,EAAAA,EAAAA,KAAA,oBAIHE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,UACCD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,cAAaF,SAAC,UAEtCD,EAAAA,EAAAA,KAAA,SACEG,UAAU,gBACVC,YAAY,SACZmB,UAAQ,EACR3C,KAAK,OACLjB,MAAOI,EAAUpB,EAAK+E,KAEtBzD,KAAK,YAGTiC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,oBACPD,EAAAA,EAAAA,KAAA,SACEG,UAAU,gBACVC,YAAY,mBACZmB,UAAQ,EACR3C,KAAK,OACLjB,MAAOI,EAAUpB,EAAKgF,KAEtB1D,KAAK,kBAMf+B,EAAAA,EAAAA,KAAA,OAAKG,UAAU,GAAEF,UACfC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,CAAC,cACpBD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,cAAaF,SAAC,YAG1CD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,qBAAoBF,UAEjCD,EAAAA,EAAAA,KAAC4B,EAAAA,GAAM,CACLC,SAAS,EACT1B,WA9JoBN,EA8Jc,aA7JrCjD,GAAgB,OAANA,QAAM,IAANA,GAAAA,EAASiD,IAAc,OAANjD,QAAM,IAANA,GAAAA,EAASiD,GACvC,gDACA,oCA4JMiC,mBAAmB,EACnBnE,MAAW,OAAJhB,QAAI,IAAJA,OAAI,EAAJA,EAAmB,WAC1ByD,YAAY,mBACZ2B,QAAmB,OAAV5F,QAAU,IAAVA,OAAU,EAAVA,EAAYkD,KAAKC,IACf,CAAE0C,MAAQ,OAAD1C,QAAC,IAADA,OAAC,EAADA,EAAG2C,eAAgBtE,MAAQ,OAAD2B,QAAC,IAADA,OAAC,EAADA,EAAG4C,iBAEjD5B,SAAUnD,EAAkB,mBAIlC6C,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKF,UAClBD,EAAAA,EAAAA,KAAA,OACEG,UAAU,qHACVgC,QA/SW/D,UAAU,IAADgE,EAC5B,IAAIzD,EAAY,CACd0B,UAAc,OAAJ1D,QAAI,IAAJA,OAAI,EAAJA,EAAM0D,UAChBE,WAAe,OAAJ5D,QAAI,IAAJA,OAAI,EAAJA,EAAM4D,WACjBC,SAAa,OAAJ7D,QAAI,IAAJA,OAAI,EAAJA,EAAM6D,SACfG,IAAQ,OAAJhE,QAAI,IAAJA,OAAI,EAAJA,EAAMgE,IACVxE,WAAe,OAAJQ,QAAI,IAAJA,OAAI,EAAJA,EAAMR,WACjBqF,aAAa7E,EAAK6E,aAClBE,IAAI/E,EAAK+E,IACTC,IAAIhF,EAAKgF,IACT3C,OAAOC,eAAeC,QAAQ,WAE5BZ,QAAY+D,EAAAA,EAAAA,IAAS,OAAJ7D,EAAAA,SAAI,IAAJA,EAAAA,QAAI,EAAJA,EAAAA,GAAM8D,OAAOC,OAAQ,CAAC5D,gBACrC,OAAHL,QAAG,IAAHA,GAAS,QAAN8D,EAAH9D,EAAK3B,YAAI,IAAAyF,GAATA,EAAWI,QAEZ9F,EAAU4B,EACZ,EA+RgC2B,SACzB,sBAKHD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAGbD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACnBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBC,EAAAA,EAAAA,MAAA,SAAOC,UAAU,GAAGsC,IAAI,wBAAuBxC,SAAA,CAAE,aACtCC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,cAAaF,SAAA,CAAE,IAAI,WAE9CC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBF,SAAA,EACjCD,EAAAA,EAAAA,KAAA,SACEpB,KAAMrC,EAAO,OAAS,WACtB4D,UAAWP,EAAgB,YAC3B3B,KAAK,WAELmC,YAAY,aACZE,SAAUzD,EAAa,eAEzBmD,EAAAA,EAAAA,KAAA,QAAMmC,QAASA,IAAM3F,GAASD,GAAO4D,UAAU,WAAUF,SACrD1D,GAAwByD,EAAAA,EAAAA,KAAC0C,EAAAA,IAAK,KAAvB1C,EAAAA,EAAAA,KAAC2C,EAAAA,IAAU,SAGvB/F,GAAUA,EAAOW,WAChByC,EAAAA,EAAAA,KAAA,KAAGG,UAAU,mBAAkBF,SAAErD,EAAOW,YAG1CyC,EAAAA,EAAAA,KAAA,SAAOG,UAAWP,EAAgB,mBAChCjC,MAAW,OAAJhB,QAAI,IAAJA,OAAI,EAAJA,EAAMa,gBACb8C,SAAUzD,EAAa,mBACvBuD,YAAY,qBAAqBnC,KAAK,kBAAkBW,KAAK,aAC9DhC,GAAUA,EAAOY,kBAChBwC,EAAAA,EAAAA,KAAA,KAAGG,UAAU,mBAAkBF,SAAErD,EAAOY,sBAG5C0C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBD,EAAAA,EAAAA,KAAA,SAAOG,UAAU,GAAEF,SAAC,UACpBD,EAAAA,EAAAA,KAAA,KAAGG,UAAU,gCAA+BF,SAAC,0IAMjDC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBF,SAAA,EACjCD,EAAAA,EAAAA,KAAA,UAAQG,UAAU,yDAClBgC,QA7Ua/D,UAAW,IAADwE,EAAAC,EAC/B,IAAIlE,EAAY,CAACmE,MAAoB,QAAfF,EAAC3D,sBAAc,IAAA2D,OAAA,EAAdA,EAAgB1D,QAAQ,SAAS3B,SAAa,OAAJZ,QAAI,IAAJA,OAAI,EAAJA,EAAMY,gBACjE8E,EAAAA,EAAAA,IAAS,OAAJ7D,EAAAA,SAAI,IAAJA,EAAAA,IAAa,QAATqE,EAAJrE,EAAAA,GAAMuE,eAAO,IAAAF,OAAT,EAAJA,EAAeG,eAAe,CAACrE,eAAa,EA2UvBsB,SACvB,YAGDD,EAAAA,EAAAA,KAAA,UAAQG,UAAU,wDAAuDF,SAAC,eAI5ED,EAAAA,EAAAA,KAAA,UAEFE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYF,SAAA,EACzBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,sBAAqBF,SAAC,cACrCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBF,SAAA,CAAC,KAAO,OAAJtD,QAAI,IAAJA,OAAI,EAAJA,EAAMsG,sBAGlDjD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAAA,UACEG,UAAU,wDACVgC,QA1TgBe,KAC1B5G,GAAmBD,EAAe,EAyTK4D,SAC9B,yBAKJ5D,IACD6D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBD,EAAAA,EAAAA,KAAA,SAAOG,UAAU,GAAEF,SAAC,UACpBC,EAAAA,EAAAA,MAAA,UACEC,UAjQcN,IACjBjD,GAAgB,OAANA,QAAM,IAANA,GAAAA,EAASiD,GACtB,4BACA,eA8PiBsD,CAAiB,UAC5BxF,MAAW,OAAJhB,QAAI,IAAJA,OAAI,EAAJA,EAAMqC,OACbf,KAAK,SACLqC,SAAUzD,EAAa,UAAUoD,SAAA,EAEjCD,EAAAA,EAAAA,KAAA,UAAQrC,MAAM,GAAEsC,SAAC,qBACjBD,EAAAA,EAAAA,KAAA,UAAQrC,OAAO,EAAMwC,UAAU,YAAWF,SAAC,eAC9B,OAAZrE,QAAY,IAAZA,OAAY,EAAZA,EAAcyD,KAAI,CAAC0B,EAAGqC,KAGnBpD,EAAAA,EAAAA,KAAA,UAAgBrC,MAAOoD,EAAE/B,OAAOiB,SAC7Bc,EAAEsC,UADQD,YAOrBlD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeF,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,SAAOG,UAAU,GAAEF,SAAC,WACpBD,EAAAA,EAAAA,KAAA,SACEG,UAAU,eACVC,YAAY,SACZxB,KAAK,OACLjB,MAAW,OAAJhB,QAAI,IAAJA,OAAI,EAAJA,EAAMmG,YAGjB5C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBF,SAAA,EAChCD,EAAAA,EAAAA,KAAA,UACEG,UAAU,wDACZF,SACC,YAIDD,EAAAA,EAAAA,KAAA,UACEG,UAAU,wDAAuDF,SAElE,kBAOPD,EAAAA,EAAAA,KAAA,cAxS4BH,KA4SxB,C","sources":["modules/provider/account/ProviderMyAccount.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { BsEye, BsEyeSlash } from \"react-icons/bs\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport { SharedServices, getById, getList, save } from \"../../../api_services/SharedServices\";\r\nimport { UseFormValidations } from \"../../../validations/UseFormValidation\";\r\nimport { urls } from \"../../../api_services/url\";\r\nconst ProviderMyAccount = () => {\r\n  \r\n  const [delegateList, setDelegateList] = useState([])\r\n  const [obj,setObj]=useState({})\r\n  const[licence,setLicence]=useState([])\r\n  const[speciality,setSpeciality]=useState([])\r\n  const [isDelegateOpen, setIsDelegateOpen] = useState(false);\r\n  const [show, setShow] = useState(false)\r\n  const [update,setUpdate]=useState()\r\n\r\n  const updateProvider=async()=>{\r\n    let jsonObjects={\r\n      firstName:data?.firstName,\r\n      middleName:data?.middleName,\r\n      lastName:data?.lastName,\r\n      dob:data?.dob,\r\n      speciality:data?.speciality,\r\n      licenseState:data.licenseState,\r\n      npi:data.npi,\r\n      dea:data.dea,\r\n      userId:sessionStorage.getItem(\"userId\")\r\n    }\r\n    let res = await save(urls?.logins.signup, {jsonObjects});\r\n    if(res?.data?.status){\r\n      // addObject({userId:\"\",email:\"\"})\r\n      setUpdate(res)\r\n    }\r\n  }\r\n\r\n  const updatePassword = async() =>{\r\n    let jsonObjects={email:sessionStorage?.getItem(\"email\"),password:data?.password}\r\n    await save(urls?.account?.changePassword,{jsonObjects})\r\n  }\r\n\r\n  const getProviderDetails = async() =>{\r\n    let jsonObjects={\r\n      userId:sessionStorage.getItem(\"userId\")\r\n    }\r\n    let res=await getById(urls.settings.getAllUsers,{jsonObjects})\r\n    setValues(res)\r\n  }\r\n  const getDelegateList = async () => {\r\n    let jsonObjects = {\r\n      type: \"Delegate\",\r\n    };\r\n    let res = await getList(urls?.settings?.getStatesdd, {\r\n      jsonObjects,\r\n    });\r\n    setDelegateList(res);\r\n  };\r\n\r\n  const licenceAll=async()=>{\r\n    let jsonObjects = {\r\n      type: \"License Type\",\r\n    };\r\n    let res = await getList(urls?.settings?.getStatesdd, { jsonObjects});\r\n    setLicence(res)\r\n  }\r\n\r\n  const specialityAll=async()=>{\r\n    let jsonObjects = {\r\n      type: \"Speciality\",\r\n    };\r\n    let res = await getList(urls?.settings?.getStatesdd, {jsonObjects});\r\n  \r\n    setSpeciality(res)\r\n  }\r\n\r\n  const handleDelegateClick = () => {\r\n    setIsDelegateOpen(!isDelegateOpen); \r\n  };\r\n  const allDelegate=async()=>{\r\n    let jsonObjects={userId:sessionStorage.getItem(\"userId\")}\r\n    let res=await getById(urls.settings.getAllUsers,{jsonObjects})\r\n    let obj=[res]\r\n    obj?.map((v)=>{\r\n      v[\"userId\"]=v?.delegateId\r\n    })\r\n    setObj(obj[0])\r\n    \r\n  }\r\n\r\n  const { data, errors, handleChange, headerlink, handleEmailChange, handleSubmit ,setValues,addObject,handleMultiSelect,handleDateChange} = UseFormValidations({\r\n    initialValues: {\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    validationSchema: {\r\n      confirmPassword: {\r\n        required: {\r\n          value: true,\r\n          message: \"Please enter confirm password\",\r\n        },\r\n      },\r\n      password: {\r\n        required: {\r\n          value: true,\r\n          message: \"Please enter new password\",\r\n        },\r\n        minlength: {\r\n          value: 8,\r\n          message: \"Password should contain one uppercase,one lowercase, one special character, one number and should be greater than 8 characters\",\r\n        },\r\n        pattern: {\r\n          value:\r\n            /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/,\r\n          message: \"Password should contain one uppercase,one lowercase, one special character, one number and should be greater than 8 characters\",\r\n        },\r\n      },\r\n    },\r\n    // submit: submit,\r\n  });\r\n  const returnValue=(key)=>{\r\n    return data?.[key]&&data?.[key]?data?.[key]:\"\"\r\n  }\r\n  const dataValue = (value) => {\r\n    return value && value != \"\" ? value : \"\";\r\n  };\r\n\r\n  useEffect(()=>{\r\n    headerlink([\r\n    {name:\"My Account\",link:\"/outpatientpro/provider/myaccountprovider\",active:true},\r\n  ])\r\n  getDelegateList()\r\n  licenceAll()\r\n  allDelegate()\r\n  specialityAll()\r\n  getProviderDetails()\r\n  },[update])\r\n\r\nuseEffect(()=>{addObject(obj)},[obj])\r\n  const emailErrorColor = (key) => {\r\n    return errors && errors?.[key]\r\n      ? \"form-control p-3 password-input border-danger\"\r\n      : \"form-control p-3 password-input \";\r\n  };\r\n  const emailErrorColor1 = (key) => {\r\n    return errors && errors?.[key]\r\n      ? \"form-select border-danger\"\r\n      : \"form-select \";\r\n  };\r\n  const returnErrorCssMultiple = (key) => {\r\n    return errors && errors?.[key] && errors?.[key]\r\n      ? \"border border-danger rounded form-multiselect\"\r\n      : \"border  rounded form-multiselect\";\r\n  };\r\n  useEffect(()=>{\r\n\r\n    if(data?.userId>0){\r\n     addObject(delegateList?.filter((v)=>v?.userId==data?.userId)?.[0])\r\n    }\r\n    \r\n   },[data?.userId,update])\r\n  return (\r\n    <div >\r\n      <div className=\" p-4 bg-white\">\r\n        <h1 className=\"py-3 mobile-header-font\">My Account</h1>\r\n\r\n        <div className=\"full-width-line\"></div>\r\n\r\n       \r\n        <div className=\"row \">\r\n          <div className=\"mediumf17  mt-4\">\r\n            Provider Name <span className=\"text-danger \">*</span>\r\n          </div>\r\n          </div>\r\n          <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <label>\r\n              First Name <span className=\"text-danger\">*</span>\r\n            </label>\r\n            <input\r\n              className=\"form-control \"\r\n              placeholder=\"First Name...\"\r\n              type=\"text\"\r\n              value={dataValue(data.firstName)}\r\n              onChange={handleChange(\"firstName\")}\r\n              name=\"firstName\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <label> Middle Name</label>\r\n            <input\r\n              className=\"form-control \"\r\n              placeholder=\"Middle Name...\"\r\n              type=\"text\"\r\n              value={dataValue(data.middleName)}\r\n              onChange={handleChange(\"middleName\")}\r\n              name=\"middleName\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <label>\r\n              {\" \"}\r\n              Last Name<span className=\"text-danger\">*</span>{\" \"}\r\n            </label>\r\n            <input\r\n              className=\"form-control \"\r\n              placeholder=\"Last Name...\"\r\n              type=\"text\"\r\n              value={dataValue(data.lastName)}\r\n              onChange={handleChange(\"lastName\")}\r\n              name=\"lastName\"\r\n            />\r\n          </div>\r\n          </div>\r\n\r\n          <div className=\"row py-2\">\r\n            <div className=\"col-md-4 \">\r\n              <label>\r\n                DOB <span className=\"text-danger\">*</span>\r\n              </label>\r\n              <DatePicker\r\n                  className=\"form-control py-2\"\r\n                  selected={data?.dob && new Date(data?.dob)}\r\n                  minDate={new Date(1900, 1, 1)}\r\n                  maxDate={new Date()}\r\n                  onChange={(e) => {handleDateChange(e, \"dob\");}}\r\n                  autoComplete=\"off\"\r\n                  name=\"startDate\"\r\n                  dateFormat=\"MM/dd/yyyy\"\r\n                  placeholderText=\"DOB\"\r\n                  popperClassName=\"react-datepicker-popper\"\r\n                  showMonthDropdown\r\n                  showYearDropdown\r\n                  dropdownMode=\"select\"\r\n                />\r\n            </div>\r\n            <div className=\"col-md-4 \">\r\n              <label>\r\n                Email <span className=\"text-danger\">*</span>\r\n              </label>\r\n              <input className=\"form-control \"\r\n              disabled placeholder=\"Email*\" \r\n              value={sessionStorage?.getItem(\"email\")} \r\n              name=\"email\" type=\"text\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-4\">\r\n            <div className=\"mediumf17 py-2\">\r\n              License Information <span className=\"text-danger\">*</span>\r\n            </div>\r\n\r\n            <div className=\"row \">\r\n              <div className=\"col-md-4\">\r\n                <label>\r\n                  License State <span className=\"text-danger\">*</span>\r\n                </label>\r\n                <select className=\"form-select\"\r\n                  value={dataValue(data.licenseState)}\r\n                  // onChange={handleChange(\"licenseState\")}\r\n                  disabled\r\n                  name=\"licenseState\"\r\n                  >\r\n                  <option value=\"\">License State</option>\r\n                  {licence&&licence?.map((v)=><option value={v?.globalId}>{v?.name}</option>)}\r\n                 <option></option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"col-md-4\">\r\n                <label>\r\n                  NPI # <span className=\"text-danger\">*</span>\r\n                </label>\r\n                <input\r\n                  className=\"form-control \"\r\n                  placeholder=\"NPI...\"\r\n                  disabled\r\n                  type=\"text\"\r\n                  value={dataValue(data.npi)}\r\n                  // onChange={handleChange(\"npi\")}\r\n                  name=\"npi\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <label>DEA (optional)</label>\r\n                <input\r\n                  className=\"form-control \"\r\n                  placeholder=\"Other License #*\"\r\n                  disabled\r\n                  type=\"text\"\r\n                  value={dataValue(data.dea)}\r\n                  // onChange={handleChange(\"dea\")}\r\n                  name=\"dea\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        \r\n        <div className=\"\">\r\n          <div className=\"mediumf17 py-2\">\r\n            Specialty <span className=\"text-danger\">*</span>\r\n          </div>\r\n          </div>\r\n          <div className=\"col-md-4 col-sm-12\">\r\n         \r\n            <Select\r\n              isMulti={true}\r\n              className={returnErrorCssMultiple(\"speciality\")}\r\n              closeMenuOnSelect={false}\r\n              value={data?.[\"speciality\"]}\r\n              placeholder=\"Select Specialty\"\r\n              options={speciality?.map((v) => {\r\n                  return { label: v?.specialityName, value: v?.specialityId };\r\n              })}\r\n              onChange={handleMultiSelect(\"speciality\")}\r\n              />\r\n          </div>\r\n      \r\n        <div className=\"p-3\">\r\n          <div\r\n            className=\"border rounded col-md-2 py-2 save  d-flex align-items-center justify-content-center text-center text-white onHover\"\r\n            onClick={updateProvider}\r\n          >\r\n            Update Profile\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"px-3 row\">\r\n           \r\n          </div>\r\n          <div className=\" row\">\r\n            <div className=\"col-md-4\">\r\n              <label className=\"\" for=\"exampleInputPassword1\" >\r\n                Password <span className=\"text-danger\">{\" \"}*</span>\r\n              </label>\r\n              <div className=\"password-container\">\r\n                <input\r\n                  type={show ? 'text' : 'password'}\r\n                  className={emailErrorColor(\"password\")}\r\n                  name=\"password\"\r\n                  // value={data?.password}\r\n                  placeholder=\"Password *\"\r\n                  onChange={handleChange(\"password\")}\r\n                />\r\n                <span onClick={() => setShow(!show)} className=\"eye-icon\">\r\n                  {!show ? <BsEyeSlash /> : <BsEye />}\r\n                </span>\r\n              </div>\r\n              {errors && errors.password && (\r\n                <p className=\"text text-danger\">{errors.password}</p>\r\n              )}\r\n\r\n              <input className={emailErrorColor(\"confirmPassword\")}\r\n                value={data?.confirmPassword}\r\n                onChange={handleChange(\"confirmPassword\")}\r\n                placeholder=\"Confirm Password *\" name=\"confirmPassword\" type=\"password\" />\r\n              {errors && errors.confirmPassword && (\r\n                <p className=\"text text-danger\">{errors.confirmPassword}</p>\r\n              )}\r\n            </div>\r\n            <div className=\"row mt-4\">\r\n              <label className=\"\">Note</label>\r\n              <p className=\"text-danger bg-white p-1 px-3\">\r\n                Password should contain one uppercase,one lowercase, one special\r\n                character, one number and should be greater than 8 characters\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"px-4 d-flex  gap-2\">\r\n            <button className=\"button-secondary rounded py-1 px-4  text-center border\"\r\n            onClick={updatePassword}\r\n            >\r\n              Update\r\n            </button>\r\n            <button className=\"button-secondary rounded py-1 px-4 text-center border\">\r\n              Cancel\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n\r\n        <div className=\"d-flex p-3\">\r\n          <div className=\"col-md-7\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-2 f18 medium\">Delegate</div>\r\n              <div className=\"col-md-6 label mt-1\">: {data?.delegateName}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <button\r\n              className=\"button-secondary rounded py-1 px-4 text-center border\"\r\n              onClick={handleDelegateClick}\r\n            >\r\n              Assign Delegate\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {isDelegateOpen && (\r\n        <div className=\"p-3\">\r\n          <div className=\"col-md-4\">\r\n            <label className=\"\">Name</label>\r\n            <select\r\n              className={emailErrorColor1(\"userId\")}\r\n              value={data?.userId}\r\n              name=\"userId\"\r\n              onChange={handleChange(\"userId\")}\r\n            >\r\n              <option value=\"\">Select Delegate</option>\r\n              <option value={true} className=\"fw-bolder\">Create New</option>\r\n              {delegateList?.map((e, i) => {\r\n                return (\r\n                  \r\n                  <option key={i} value={e.userId}>\r\n                    {e.userName}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"col-md-4 mt-2\">\r\n            <label className=\"\">Email</label>\r\n            <input\r\n              className=\"form-control\"\r\n              placeholder=\"Email*\"\r\n              type=\"text\"\r\n              value={data?.email}\r\n            />\r\n          </div>\r\n          <div className=\"d-flex mt-4 gap-2\">\r\n            <button\r\n              className=\"button-secondary rounded py-1 px-4 text-center border\"\r\n            //  onClick={submit}\r\n            >\r\n              Update\r\n            </button>\r\n\r\n            <button\r\n              className=\"button-secondary rounded py-1 px-4 text-center border\"\r\n             \r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <hr/>\r\n      </div>\r\n\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProviderMyAccount;\r\n"],"names":["ProviderMyAccount","_sessionStorage2","delegateList","setDelegateList","useState","obj","setObj","licence","setLicence","speciality","setSpeciality","isDelegateOpen","setIsDelegateOpen","show","setShow","update","setUpdate","data","errors","handleChange","headerlink","handleEmailChange","handleSubmit","setValues","addObject","handleMultiSelect","handleDateChange","UseFormValidations","initialValues","password","confirmPassword","validationSchema","required","value","message","minlength","pattern","dataValue","useEffect","name","link","active","async","_urls$settings","res","getList","urls","settings","getStatesdd","jsonObjects","type","getDelegateList","_urls$settings2","licenceAll","userId","sessionStorage","getItem","getById","getAllUsers","map","v","delegateId","allDelegate","_urls$settings3","specialityAll","getProviderDetails","emailErrorColor","key","_delegateList$filter","filter","_jsx","children","_jsxs","className","placeholder","firstName","onChange","middleName","lastName","DatePicker","selected","dob","Date","minDate","maxDate","e","autoComplete","dateFormat","placeholderText","popperClassName","showMonthDropdown","showYearDropdown","dropdownMode","disabled","licenseState","globalId","npi","dea","Select","isMulti","closeMenuOnSelect","options","label","specialityName","specialityId","onClick","_res$data","save","logins","signup","status","for","BsEye","BsEyeSlash","_sessionStorage","_urls$account","email","account","changePassword","delegateName","handleDelegateClick","emailErrorColor1","i","userName"],"sourceRoot":""}